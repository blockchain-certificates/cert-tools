'''
Generates the revocation list file (.json) that represents the revoked certificates.

'''

import os
import sys
from cert_schema import *
import configargparse
import json

ISSUER_TYPE = 'RevocationList'

OPEN_BADGES_V2_CONTEXT_JSON = OPEN_BADGES_V2_CANONICAL_CONTEXT


def generate_revocation_list_file(config):

    output_handle = open(config.output_file_revocation, 'w') if config.output_file_revocation else sys.stdout

    context = [OPEN_BADGES_V2_CONTEXT_JSON]

    revocation_list = {
        '@context': context,
        'id': config.revocation_list_uri,
        'issuer': config.issuer_id,
        'type': ISSUER_TYPE,
        'revokedAssertions': [],
    }


    output_handle.write(json.dumps(revocation_list, indent=2))

    if output_handle is not sys.stdout:
        output_handle.close()


def get_config():
    cwd = os.getcwd()
    p = configargparse.getArgumentParser(default_config_files=[os.path.join(cwd, 'conf_v2.ini')])
    p.add('-c', '--my-config', required=True, is_config_file=True, help='config file path')
    p.add_argument('--data_dir', type=str, help='where data files are located')

    p.add_argument('-r', '--revocation_list_uri', type=str, required=True, help='URI of the Revocation List used for marking revocation. See https://openbadgespec.org/#Profile for more details')
    p.add_argument('-d', '--issuer_id', type=str, required=True, help='the issuer\'s publicly accessible identification file; i.e. URL of the file generated by this tool')
    p.add_argument('-u', '--issuer_url', type=str, help='the issuer\'s main URL address')
    p.add_argument('-o', '--output_file_revocation', type=str, help='the output file to save the issuer\'s identification file')
    args, _ = p.parse_known_args()
    args.abs_data_dir = os.path.abspath(os.path.join(cwd, args.data_dir))

    return args


def main():
    conf = get_config()
    generate_revocation_list_file(conf)


if __name__ == "__main__":
    main()